plugins {
    id 'java'
    id 'java-library'
    id 'io.github.lhotari.gradle-nar-plugin'
    id 'com.palantir.docker'
}

task versionTxt()  {
    doFirst {
        new File(project.projectDir, "src/main/resources/cassandra-source-version.properties").text = "$project.version\n"
    }
}

compileJava {
    dependsOn versionTxt
}

compileTestJava {
    options.compilerArgs += '-parameters'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += '-Xlint:none'
}

sourceSets {
    // Make the compileOnly dependencies available when compiling/running tests
    test.compileClasspath += configurations.compileClasspath
    test.runtimeClasspath += configurations.compileClasspath
}

dependencies {
    implementation project(':commons')
    implementation("com.github.ben-manes.caffeine:caffeine:${caffeineVersion}")
    implementation("org.rocksdb:rocksdbjni:${rocksdbVersion}")
    implementation("io.vavr:vavr:${vavrVersion}")
    implementation "com.datastax.oss:java-driver-core:${ossDriverVersion}"
    implementation "com.datastax.oss:java-driver-query-builder:${ossDriverVersion}"
    implementation("org.apache.kafka:connect-api:${kafkaVersion}")
    implementation("com.google.guava:guava:${guavaVersion}")
    implementation("com.datastax.oss:messaging-connectors-commons-core:${messagingConnectorsCommonsVersion}")

    implementation("org.apache.avro:avro:${avroVersion}")

    compileOnly("${pulsarGroup}:pulsar-client-original:${pulsarVersion}")
    compileOnly("${pulsarGroup}:pulsar-io-common:${pulsarVersion}")
    compileOnly("${pulsarGroup}:pulsar-io-core:${pulsarVersion}")
    implementation(platform("com.fasterxml.jackson:jackson-bom:${jacksonBomVersion}"))

    constraints {
        implementation("ch.qos.logback:logback-classic:${logbackVersion}")
        implementation("com.github.jnr:jnr-posix:${jnrVersion}")
        implementation("io.netty:netty-handler:${nettyVersion}")
        implementation("io.netty:netty-transport-native-epoll:${nettyVersion}")
        implementation("io.netty:netty-transport-native-unix-common:${nettyVersion}")
        implementation("io.netty:netty-codec-haproxy:${nettyVersion}")
        implementation("io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}")
        implementation("org.apache.commons:commons-compress:${commonCompressVersion}")
        implementation("org.json:json:${jsonVersion}")
    }

    testRuntimeOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"


    testImplementation("com.datastax.oss:dsbulk-tests:1.6.0")
    testImplementation("org.reactivestreams:reactive-streams:1.0.3")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")


    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation project(':testcontainers')
    testImplementation("${pulsarGroup}:pulsar-client") {
        version {
            strictly("${pulsarVersion}")
        }
    }

    nar "${pulsarGroup}:pulsar-io:${pulsarVersion}"
}

tasks.jar.dependsOn project(':commons').jar
jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    zip64=true
}

nar {
    archivesBaseName = 'pulsar-cassandra-source'
    manifest {
        attributes 'Nar-Group': 'com.datastax.oss'
        attributes 'Nar-Id': 'pulsar-io-cassandra-source-nar'
    }
}

assemble.dependsOn(nar)

test {
    // Add dependency on jar task, since it will be main target for testing
    dependsOn project(':agent-c4').shadowJar
    dependsOn nar

    useJUnitPlatform()

    environment 'PULSAR_IMAGE', testPulsarImage + ':' + testPulsarImageTag
    environment 'CASSANDRA_IMAGE', 'cassandra:' + cassandra4Version

    systemProperty "connectorBuildDir", buildDir
    systemProperty "agentBuildDir", project(':agent-c4').buildDir
    systemProperty "projectVersion", project.version
}

dockerPrepare.dependsOn(nar)
docker {
    name "${dockerRepo}pulsar:${testPulsarImageTag}-csc"
    files "$buildDir/libs/", "src/docker/"
    buildArgs([BUILD_VERSION: project.version,
               LUNASTREAMING_IMAGE: testPulsarImage,
               LUNASTREAMING_VERSION: testPulsarImageTag])
}
build.dependsOn(project.tasks['docker'])



